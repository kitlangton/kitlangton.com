package jobs

import zio.Chunk
import zio.json.ast.Json
import zio.json._

import scala.math.BigDecimal.javaBigDecimal2bigDecimal

object JsonParsing {
  import JsonType._

  def pascalFormat(s: String): String = {
    val parts = s.split("[_\\-.]")
    parts.map(_.capitalize).mkString("")
  }

  val example =
    """
{"etag":"wKFxdmwV4xYhuDt8BEK-9d08AAY","items":[{"contentDetails":{"videoId":"XUwynbWUlhg","videoPublishedAt":"2021-04-13T12:34:13.000Z"},"etag":"mMggohCoAp8O814K_-gc5naphiw","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DQUNERDQ2NkIzRUQxNTY1","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"On our first session Kit Langton and Adam Fraser were live coding an interactive presentation web application with ZIO. We saw how we can use ZIO to quickly build a significant application, learnt about using ZIO to power front-end applications, and got to use streams and concurrent data structures along the way.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":0,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"XUwynbWUlhg"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/XUwynbWUlhg/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/XUwynbWUlhg/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/XUwynbWUlhg/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/XUwynbWUlhg/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/XUwynbWUlhg/sddefault.jpg","width":640}},"title":"1st Zymposium -  Building an App with ZIO","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"g6w1BuKlSQs","videoPublishedAt":"2021-04-19T14:43:28.000Z"},"etag":"TWMllkHmkfShIZW0LbdFG37CFnQ","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41MzJCQjBCNDIyRkJDN0VD","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Will our interactive slideshow app redeem itself or will it crack, once again, under pressure? Spoiler—it works! We weren't even able to DDOS ourselves on purpose. We give an autopsy report of what went wrong last week, how we fixed it, and how zio-http made our code sparkle like a fresh-born fawn in the sun. We have special guest, Tushar Mathur (from Dream11), joining us to talk to us about zio-http and building resilient, massively concurrent applications with ZIO. Watch this with your eyes, then join us live next week.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":1,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"g6w1BuKlSQs"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/g6w1BuKlSQs/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/g6w1BuKlSQs/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/g6w1BuKlSQs/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/g6w1BuKlSQs/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/g6w1BuKlSQs/sddefault.jpg","width":640}},"title":"2nd Zymposium - Adam Fraser, Kit Langton & Tushar Mathur","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"1e0C0jUzup4","videoPublishedAt":"2021-04-20T08:56:18.000Z"},"etag":"SegVmMTirQirjpKx0TVmK66MRjM","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4xMkVGQjNCMUM1N0RFNEUx","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Join me—Kit—as I present, motivate, and reconstruct ZIO's Has type. Has is a type-enhanced map that undergirds ZLayer, with a clever little implementation unto itself. Enjoy!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":2,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"1e0C0jUzup4"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/1e0C0jUzup4/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/1e0C0jUzup4/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/1e0C0jUzup4/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/1e0C0jUzup4/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/1e0C0jUzup4/sddefault.jpg","width":640}},"title":"I Can Has? (And So Can You!) — Exploring ZIO's Has Type","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"M3HmROwOoRU","videoPublishedAt":"2021-05-11T10:32:04.000Z"},"etag":"_YkOSMmKa0bkvK3DukfEv83iZAg","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4wOTA3OTZBNzVEMTUzOTMy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"We'll see how ZIO Prelude gives us the tools for solving some common problems in day-to-day development. We'll also see how ZIO Prelude provides a set of abstractions we can use for inspiration when implementing our own data types but never forces us to use these abstractions.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":3,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"M3HmROwOoRU"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/M3HmROwOoRU/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/M3HmROwOoRU/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/M3HmROwOoRU/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/M3HmROwOoRU/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/M3HmROwOoRU/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Prelude","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"GfNiDaL5aIM","videoPublishedAt":"2021-05-12T09:25:12.000Z"},"etag":"KMC-nyIN7zXZemR52nTLZSWt9sU","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41MjE1MkI0OTQ2QzJGNzNG","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Zymposium is going to another level with special guest John De Goes as we learn how we can all contribute to building the next generation of the ZIO ecosystem. Kit and Adam will play the role of new contributors and John will walk us through ZIO Schema, a library that allows describing models of data in a composable way that will support many future ZIO solutions such as distributed programming in ZIO Flow. We will go from understanding the library to set up the necessary tools to submitting our first PR to ZIO Schema!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":4,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"GfNiDaL5aIM"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/GfNiDaL5aIM/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/GfNiDaL5aIM/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/GfNiDaL5aIM/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/GfNiDaL5aIM/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/GfNiDaL5aIM/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Schema","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"97Yc0Ub9aZ8","videoPublishedAt":"2021-05-20T08:24:58.000Z"},"etag":"5MywF2nbhm5aJ9uvJpePUHpLPL0","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4wMTcyMDhGQUE4NTIzM0Y5","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Adam Fraser and Kit Langton will continue their journey into ZIO Prelude. We will see how thinking in terms of producers and consumers of values can give us powerful insights into the structure of our programs and how we can use these to develop composable operators for own data types, regardless of whether or not we choose to depend on a library like ZIO Prelude.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":5,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"97Yc0Ub9aZ8"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/97Yc0Ub9aZ8/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/97Yc0Ub9aZ8/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/97Yc0Ub9aZ8/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/97Yc0Ub9aZ8/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/97Yc0Ub9aZ8/sddefault.jpg","width":640}},"title":"Zymposium - Prelude Redux (Type-classes without Type-classes)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"0oz8ZTf-LD0","videoPublishedAt":"2021-06-02T00:13:41.000Z"},"etag":"6ptcT5E7W6UX139MxEO504Su72A","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4yODlGNEE0NkRGMEEzMEQy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week Kit and Adam are going back to the front end!\n\nWe’ll be looking at some tools in the works that will let us automatically wire a full-stack application just like we can now automatically wire layers. We’ll use this to build a full-stack CRUD application and start to explore other ways we can make this even easier with ZIO.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":6,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"0oz8ZTf-LD0"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/0oz8ZTf-LD0/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/0oz8ZTf-LD0/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/0oz8ZTf-LD0/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/0oz8ZTf-LD0/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/0oz8ZTf-LD0/sddefault.jpg","width":640}},"title":"Zymposium - Full Stack Development (Part 1)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"VqTqFhU9Mrs","videoPublishedAt":"2021-06-02T00:13:59.000Z"},"etag":"8lPmqe1U25XTprxJbfYXYktbc-g","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41NkI0NEY2RDEwNTU3Q0M2","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week Kit and Adam will continue their quest to make building a full stack web app with ZIO easy and fun. We will dive into the CRUD required for a full stack application this week and look at how we can use some existing tools from the ZIO ecosystem such as ZQuery along with some special sauce to make this part of writing an app much less \"cruddy\".","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":7,"publishedAt":"2021-06-07T05:44:51.000Z","resourceId":{"kind":"youtube#video","videoId":"VqTqFhU9Mrs"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/VqTqFhU9Mrs/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/VqTqFhU9Mrs/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/VqTqFhU9Mrs/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/VqTqFhU9Mrs/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/VqTqFhU9Mrs/sddefault.jpg","width":640}},"title":"Zymposium - Full Stack Development (Part 2)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"-km5ohYhJa4","videoPublishedAt":"2021-06-09T09:18:45.000Z"},"etag":"56GCTqWgB_nvA38_n-KM8XWU0bs","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy45NDk1REZENzhEMzU5MDQz","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week Adam and Kit will be exploring optics! Optics are great tools for working with parts of larger data structures and come up in disguise in many places such as ZIO Test assertions. However, they aren't used frequently in Scala. We'll be looking at ZIO Optics, a new library that aims to change this and see how easy it can be to modify larger data structures, even when we need to use ZIO or STM to do it.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":8,"publishedAt":"2021-06-08T16:37:56.000Z","resourceId":{"kind":"youtube#video","videoId":"-km5ohYhJa4"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/-km5ohYhJa4/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/-km5ohYhJa4/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/-km5ohYhJa4/mqdefault.jpg","width":320}},"title":"Zymposium - Optics","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"zKyPwbk9q7s","videoPublishedAt":"2021-06-21T09:00:56.000Z"},"etag":"lhgRHCL2b6rck7B9fdnJDcOp_3Y","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5GNjNDRDREMDQxOThCMDQ2","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Last week we learned about optics and how ZIO Optics provides a new approach to optics for Scala. Optics provide a powerful way to modify larger data structures but we saw there was some work in implementing optics for our own data types. This week we will explore how we can use macros to eliminate this boilerplate, using this as an opportunity to learn how to write macros in Scala 3. If you've never written a macro before and want to get ready for the future now is your chance!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":9,"publishedAt":"2021-06-20T16:26:57.000Z","resourceId":{"kind":"youtube#video","videoId":"zKyPwbk9q7s"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/zKyPwbk9q7s/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/zKyPwbk9q7s/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/zKyPwbk9q7s/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/zKyPwbk9q7s/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/zKyPwbk9q7s/sddefault.jpg","width":640}},"title":"Zymposium - Macros in Scala 3","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"mzqsXklbmfM","videoPublishedAt":"2021-06-28T08:46:15.000Z"},"etag":"Oygkwpnhr9X9t-232yBMpNa3IcI","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy40NzZCMERDMjVEN0RFRThB","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"We will be building full-stack applications with the special guest international man of mystery Pierre Ricadat, also known as @ghostdogpr. Pierre will be walking us through Caliban, a GraphQL library in Scala that just had its 1.0 release. We'll be seeing how easy it can be to upgrade an existing application to use GraphQL with the power of Caliban!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":10,"publishedAt":"2021-06-23T15:01:48.000Z","resourceId":{"kind":"youtube#video","videoId":"mzqsXklbmfM"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/mzqsXklbmfM/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/mzqsXklbmfM/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/mzqsXklbmfM/mqdefault.jpg","width":320}},"title":"Zymposium - Caliban","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"2uEjXuFBsBk","videoPublishedAt":"2021-07-13T08:10:47.000Z"},"etag":"vjxuWHzWi9Vjt-IS_uz0WppVYmQ","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5EMEEwRUY5M0RDRTU3NDJC","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"In this video Adam and Kit talk about variance. Variance is fundamental to domain modeling and is widely used in ZIO libraries. But many libraries don't use variance resulting in poor type inference and cryptic compilation errors. In this video we'll take the mystery out of variance and see how it help us write code that better reflects the data flow in our programs.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":11,"publishedAt":"2021-07-12T18:25:46.000Z","resourceId":{"kind":"youtube#video","videoId":"2uEjXuFBsBk"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/2uEjXuFBsBk/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/2uEjXuFBsBk/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/2uEjXuFBsBk/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/2uEjXuFBsBk/sddefault.jpg","width":640}},"title":"Zymposium - Variance","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"El9fkkHewp0","videoPublishedAt":"2021-07-16T11:15:35.000Z"},"etag":"ctPMTpjGwajtm1BVlqsqp7WM634","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy45ODRDNTg0QjA4NkFBNkQy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Quill for Scala 3 is out in Beta!\n\nAfter a year and a half of Dotty macro hacking, filing issues, and then macro hacking some more, ProtoQuill is ready to be unveiled. Built on top of Scala 3's bleeding-edge meta-programming capability, ProtoQuill represents not only what a Language-Query system can be, it represents what macro-driven products can become.\n\nCome and join our Quill Release Party as Alexander Ioffe briefly showcases some of ProtoQuill's new features and talks about the new landscape of meta-programming that is upon us!\n\nProtoQuill is more than just a Scala 3 port. It is a re-imagining of what Quill can look like using unique Scala 3 meta-programming features such as inline, Quoted Matching, and Generic Derivation. These things enable many new features such as Co-Product rows, custom SQL-translation of plain-Scala code, and the sharing of Quoted and Non-Quoted clauses. Up to now, much has been said about how to use these things to work independently.\n\nLet's see how they work together!\n\nAdditionally, This Meetup will host a panel discussion lead by Alexander Ioffe with special guests: Flavio Braz, Damian Reeves, Adam Fraser, and Kit Langton & Prakhar Saxena👏","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":12,"publishedAt":"2021-07-16T11:13:32.000Z","resourceId":{"kind":"youtube#video","videoId":"El9fkkHewp0"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/El9fkkHewp0/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/El9fkkHewp0/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/El9fkkHewp0/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/El9fkkHewp0/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/El9fkkHewp0/sddefault.jpg","width":640}},"title":"Zymposium - Proto-Quill Release Party","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"toSdrNimrTc","videoPublishedAt":"2021-08-02T08:32:32.000Z"},"etag":"Ew235Xyr4F7Kw3GDWm9P3_85T9o","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4zMDg5MkQ5MEVDMEM1NTg2","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"In the last 2 years we engaged in a monster-size task to port ZIO and most of its ecosystem to TypeScript, you might ask, why? While being in love with ZIO and Scala we have many places where the JVM isn’t a viable option and Scala.js, while being very nice, isn’t well integrated with the npm (js) ecosystem.\n\nHaving a different language, TypeScript, as a target meant we had to rethink some patterns and in general the API of each module needed to be thought of in terms of both features and limitations of the language.\n\nVery nice things happened, for example, we were forced to use an explicit Has[_] type instead of following the ZIO 1.0 service pattern, and, as it turns out, this is going to be the default for ZIO 2.0 too.\n\nWhile Scala and TypeScript differ in many aspects there is a degree of similarity and this is getting even better with the introduction of Unions and Intersections in Scala 3 (that TypeScript already had for a long time).\n\nPrecisely having unions and intersection, plus a number of tricks is the reason why, in TypeScript, we can have a better developer experience in handling errors (when one error is handled it is removed from the union) and in providing partial environments (when one service is provided it is removed from the intersection).\n\nToday we will be looking at both TypeScript & Scala 3 while developing an intuition of how ZIO might look in the future when Scala 3 will be its primary target.\n\nAbout the speaker:\nMichael Arnaldi the author of Effect-TS, a functional programming library. The library allows building reliable, scalable, maintainable, and resilient web applications, leveraging the power of functional programming patterns.\n\nPS. Together with Michael and Matechs we are organizing two amazing workshops:\n\nPractical Functional Programming with Typescript - London, UK\nhttps://www.eventbrite.co.uk/e/practical-functional-programming-with-typescript-london-edition-tickets-159683316097\n\nAnd\n\nFrontend testing in Typescript, London UK\nhttps://www.eventbrite.co.uk/e/frontend-testing-in-typescript-london-edition-tickets-160606210499","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":13,"publishedAt":"2021-08-01T16:37:39.000Z","resourceId":{"kind":"youtube#video","videoId":"toSdrNimrTc"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/toSdrNimrTc/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/toSdrNimrTc/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/toSdrNimrTc/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/toSdrNimrTc/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/toSdrNimrTc/sddefault.jpg","width":640}},"title":"Zymposium — Integrating the learning from TypeScript in designing a ZIO powered by Scala 3","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"lgCb4-4M-fw","videoPublishedAt":"2021-08-10T08:22:20.000Z"},"etag":"lXoqOwMS1Tf_mBpWkueF7PdxtLE","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41Mzk2QTAxMTkzNDk4MDhF","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week, Adam and Kit will demo and explore the inner workings of zio-test's new Smart Assertions. This new test syntax allows you to write simple, straightforward, boolean expressions—all without losing the human-readable, debuggable error messages from other assertion DSLs. As we look at the implementation, we'll discuss the delicate fusion of principled combinator DSLs with hacky macros.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":14,"publishedAt":"2021-08-01T17:52:02.000Z","resourceId":{"kind":"youtube#video","videoId":"lgCb4-4M-fw"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/lgCb4-4M-fw/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/lgCb4-4M-fw/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/lgCb4-4M-fw/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/lgCb4-4M-fw/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/lgCb4-4M-fw/sddefault.jpg","width":640}},"title":"Zymposium — Smart Assertions","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"DDZ8HgWOpBk","videoPublishedAt":"2021-08-18T08:57:58.000Z"},"etag":"o0dFg7vZfXKr1z_6R9-RPRelfqw","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5EQUE1NTFDRjcwMDg0NEMz","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This Friday Adam and Kit will be learning about ZIO Flow, a project that aims to do for distributed programming what ZIO has done for concurrent programming, with special guest Ash. Ash will explain how ZIO Flow lets us execute persistent, distributed, fault-tolerant computations. Then we'll be live coding building a small application in ZIO Flow with her. Come join us!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":15,"publishedAt":"2021-08-01T18:20:02.000Z","resourceId":{"kind":"youtube#video","videoId":"DDZ8HgWOpBk"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/DDZ8HgWOpBk/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/DDZ8HgWOpBk/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/DDZ8HgWOpBk/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/DDZ8HgWOpBk/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Flow","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"lJvoeYlRf-g","videoPublishedAt":"2021-08-24T13:20:41.000Z"},"etag":"xqMBtiB0ZNHmvFAOdkDvOUin-1g","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41QTY1Q0UxMTVCODczNThE","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we are back to the full stack! We will be embarking on building out Zeetup to be a model of a full-stack ZIO application include a server, persistence, authentication, and so on. We'll be exploring best practices for working with layers and get practice using different ZIO ecosystem libraries as we build the solution. Come join the fun!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":16,"publishedAt":"2021-08-23T11:51:22.000Z","resourceId":{"kind":"youtube#video","videoId":"lJvoeYlRf-g"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/lJvoeYlRf-g/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/lJvoeYlRf-g/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/lJvoeYlRf-g/mqdefault.jpg","width":320}},"title":"Zymposium — Full Stack Frontend","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"N_it0qwk7_U","videoPublishedAt":"2021-08-31T12:22:20.000Z"},"etag":"sLBB5CEKZnvUV8SlCUnsktYQvoE","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4yMUQyQTQzMjRDNzMyQTMy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be continuing our exploration of type-level programming by implementing a type-level set. These sets were one of the main alternatives explored for composing ZIO's environment type prior to the development of ZLayer. We'll use this to see how type-level programming doesn't have to be scary. We'll also see some of the advantages and disadvantages of this approach and why we ended up where we are. Don't worry, we'll be back with more full-stack work soon as we take the boilerplate out of all the things!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":17,"publishedAt":"2021-08-23T11:52:06.000Z","resourceId":{"kind":"youtube#video","videoId":"N_it0qwk7_U"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/N_it0qwk7_U/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/N_it0qwk7_U/hqdefault.jpg","width":480},"medium":{"height":180,"url":"https://i.ytimg.com/vi/N_it0qwk7_U/mqdefault.jpg","width":320}},"title":"Zymposium — Type-Level Sets","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"w2rcHCqdn-o","videoPublishedAt":"2021-09-20T10:26:04.000Z"},"etag":"YsOXV1SJ37toae2L5zRWeNNsTAg","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5ENDU4Q0M4RDExNzM1Mjcy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"A new weekly video about Path Dependent Types by Adam Fraser and Kit Langton is up!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":18,"publishedAt":"2021-09-20T10:25:26.000Z","resourceId":{"kind":"youtube#video","videoId":"w2rcHCqdn-o"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/w2rcHCqdn-o/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/w2rcHCqdn-o/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/w2rcHCqdn-o/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/w2rcHCqdn-o/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/w2rcHCqdn-o/sddefault.jpg","width":640}},"title":"Zymposium — Path Dependent Types","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"wsTIcHxJMeQ","videoPublishedAt":"2021-09-30T12:55:12.000Z"},"etag":"AfJTvB7dL6U9D8AoC7WfQRYqWGQ","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy45NzUwQkI1M0UxNThBMkU0","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":19,"publishedAt":"2021-09-30T12:54:39.000Z","resourceId":{"kind":"youtube#video","videoId":"wsTIcHxJMeQ"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/wsTIcHxJMeQ/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/wsTIcHxJMeQ/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/wsTIcHxJMeQ/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/wsTIcHxJMeQ/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/wsTIcHxJMeQ/sddefault.jpg","width":640}},"title":"ZIO from Scratch — Part 1","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"g8Tuqldu2AE","videoPublishedAt":"2021-09-30T12:58:13.000Z"},"etag":"usECWt5VpWExcrISC10rbSA7OSU","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DNzE1RjZEMUZCMjA0RDBB","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":20,"publishedAt":"2021-09-30T12:55:00.000Z","resourceId":{"kind":"youtube#video","videoId":"g8Tuqldu2AE"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/g8Tuqldu2AE/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/g8Tuqldu2AE/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/g8Tuqldu2AE/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/g8Tuqldu2AE/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/g8Tuqldu2AE/sddefault.jpg","width":640}},"title":"ZIO from Scratch — Part 2","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"0IU9mGO_9Rw","videoPublishedAt":"2021-10-20T02:08:44.000Z"},"etag":"-gsNHcv2dNTdpIIxGqOB0pJ8H10","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy43MTI1NDIwOTMwQjIxMzNG","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":21,"publishedAt":"2021-10-20T02:04:03.000Z","resourceId":{"kind":"youtube#video","videoId":"0IU9mGO_9Rw"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/0IU9mGO_9Rw/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/0IU9mGO_9Rw/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/0IU9mGO_9Rw/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/0IU9mGO_9Rw/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/0IU9mGO_9Rw/sddefault.jpg","width":640}},"title":"ZIO from Scratch — Part 3","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"95Vk-vVgnOg","videoPublishedAt":"2021-10-20T02:08:48.000Z"},"etag":"7rjOaJSgaIZKKK285933POW_k6Q","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DQ0MyQ0Y4Mzg0M0VGOEYw","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":22,"publishedAt":"2021-10-20T02:04:22.000Z","resourceId":{"kind":"youtube#video","videoId":"95Vk-vVgnOg"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/95Vk-vVgnOg/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/95Vk-vVgnOg/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/95Vk-vVgnOg/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/95Vk-vVgnOg/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/95Vk-vVgnOg/sddefault.jpg","width":640}},"title":"ZIO from Scratch — Part 4","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"uzDs4X42w2k","videoPublishedAt":"2021-10-20T02:08:51.000Z"},"etag":"A2aiwBBKsxMRWeifCmE1PQGpLxw","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4yQUE2Q0JEMTk4NTM3RTZC","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":23,"publishedAt":"2021-10-20T02:04:41.000Z","resourceId":{"kind":"youtube#video","videoId":"uzDs4X42w2k"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/uzDs4X42w2k/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/uzDs4X42w2k/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/uzDs4X42w2k/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/uzDs4X42w2k/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/uzDs4X42w2k/sddefault.jpg","width":640}},"title":"ZIO from Scratch — Part 5","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"D8VeX9SIfD0","videoPublishedAt":"2021-11-11T11:31:02.000Z"},"etag":"xvOpy0zeDGKCduOoaJPzUWnyRFw","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DMkU4NTY1QUFGQTYwMDE3","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Learn from the experience of CTOs and technical decision-makers as they tell us why they chose ZIO for their project. \n\n#zioscala #scala #scala3 #functionalscala #functionalprogramming","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":24,"publishedAt":"2021-11-11T13:29:41.000Z","resourceId":{"kind":"youtube#video","videoId":"D8VeX9SIfD0"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/D8VeX9SIfD0/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/D8VeX9SIfD0/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/D8VeX9SIfD0/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/D8VeX9SIfD0/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/D8VeX9SIfD0/sddefault.jpg","width":640}},"title":"Why ZIO?","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"y21EnJ28mpM","videoPublishedAt":"2021-12-08T14:48:17.000Z"},"etag":"LYZwCz7Cya7E6s2PsYi1uexw4-o","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy43NDhFRTgwOTRERTU4Rjg3","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Today Adam and Kit will be talking about streams. We'll be learning about how streams represent a fundamental complement to functional effects like ZIO, see one way we can represent streams, and get our hands dirty implementing some stream operators. If you have ever wondered about how streams relate to effects or how streams are implemented this is for you!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":25,"publishedAt":"2021-11-19T14:47:06.000Z","resourceId":{"kind":"youtube#video","videoId":"y21EnJ28mpM"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/y21EnJ28mpM/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/y21EnJ28mpM/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/y21EnJ28mpM/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/y21EnJ28mpM/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/y21EnJ28mpM/sddefault.jpg","width":640}},"title":"ZIO Stream — Part 1 — Introduction","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"OD1Yr48-0Js","videoPublishedAt":"2021-12-14T12:11:53.000Z"},"etag":"BZD_c0RsSawjW4MQwKYPRgKXx0w","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5CMEQ2Mjk5NTc3NDZFRUNB","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":26,"publishedAt":"2021-12-14T12:24:37.000Z","resourceId":{"kind":"youtube#video","videoId":"OD1Yr48-0Js"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/OD1Yr48-0Js/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/OD1Yr48-0Js/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/OD1Yr48-0Js/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/OD1Yr48-0Js/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/OD1Yr48-0Js/sddefault.jpg","width":640}},"title":"Declarative vs Executable Encodings","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"trF44bGHwXg","videoPublishedAt":"2021-12-15T09:29:08.000Z"},"etag":"V7-QQkj4XpxD7zWkU09VpLf6X1I","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4zRDBDOEZDOUM0MDY5NEEz","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Today Adam and Kit will continue talking about streams. We will learn about channels and see how they unify streams and sinks to let us describe all stream operators in terms of a single data type. If you want to get a head start on the new stream encoding coming to ZIO 2.0 this is the session for you!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":27,"publishedAt":"2021-12-11T23:21:39.000Z","resourceId":{"kind":"youtube#video","videoId":"trF44bGHwXg"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/trF44bGHwXg/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/trF44bGHwXg/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/trF44bGHwXg/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/trF44bGHwXg/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/trF44bGHwXg/sddefault.jpg","width":640}},"title":"ZIO Streams — Part 3 — Channels","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"HxPCXfnbg3U","videoPublishedAt":"2021-12-17T10:18:52.000Z"},"etag":"V-Mkby-fQQKhUu3aPjZWHp8tNSc","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy44Mjc5REFBRUE2MTdFRDU0","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":28,"publishedAt":"2021-11-19T14:46:24.000Z","resourceId":{"kind":"youtube#video","videoId":"HxPCXfnbg3U"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/HxPCXfnbg3U/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/HxPCXfnbg3U/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/HxPCXfnbg3U/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/HxPCXfnbg3U/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/HxPCXfnbg3U/sddefault.jpg","width":640}},"title":"Hacking on ZIO-CLI","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"L-P5Cx3DduE","videoPublishedAt":"2021-12-22T11:01:51.000Z"},"etag":"LLLm1OJPw5lszTuoEcFer4OQDIE","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41QUZGQTY5OTE4QTREQUU4","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"We are back from Functional Scala and excited to celebrate the holidays with even more ZIO! This week we will be having special guest Alex Ioffe join us to talk about Quill. Quill recently moved to the ZIO organization and we will be learning about how it provides a great solution for database access in our ZIO applications and get a preview of how it is going to be getting even better with deeper ZIO integration. Come learn with us!\n\nhttps://github.com/kitlangton/quill-examples-zymposium","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":29,"publishedAt":"2021-12-11T23:21:07.000Z","resourceId":{"kind":"youtube#video","videoId":"L-P5Cx3DduE"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/L-P5Cx3DduE/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/L-P5Cx3DduE/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/L-P5Cx3DduE/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/L-P5Cx3DduE/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/L-P5Cx3DduE/sddefault.jpg","width":640}},"title":"Intro to Quill by Alexander Ioffe","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"B_-x2-HKsUA","videoPublishedAt":"2022-03-24T12:10:58.000Z"},"etag":"yE5s5h-t4K3jOF77QEc7IgiidpY","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy42MTI4Njc2QjM1RjU1MjlG","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be talking about aspects. Aspects are a way of separating \"how\" our effects get executed from \"what\" they are doing. Aspects started with ZIO Test but have since moved to ZIO ecosystem libraries such as Caliban and will be available more generally in ZIO 2.0, so now is a great time to learn about them!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":30,"publishedAt":"2022-02-19T21:35:19.000Z","resourceId":{"kind":"youtube#video","videoId":"B_-x2-HKsUA"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/B_-x2-HKsUA/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/B_-x2-HKsUA/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/B_-x2-HKsUA/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/B_-x2-HKsUA/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/B_-x2-HKsUA/sddefault.jpg","width":640}},"title":"Zymposium - Aspects","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"Lq_EI7l9rnA","videoPublishedAt":"2022-03-28T14:48:33.000Z"},"etag":"qDfu1MQjiZMQg12ACkr_t9e0IVs","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy45RjNFMDhGQ0Q2RkFCQTc1","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be learning about FiberRefs. FiberRefs were introduced by ZIO and are ZIO's equivalent of a Java thread-local. FiberRefs are being used more and more in ZIO 2.0 and we'll learn how we can use them in our own applications to elegantly manage some local contexts.\n\n#zioworld #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":31,"publishedAt":"2022-03-28T14:48:22.000Z","resourceId":{"kind":"youtube#video","videoId":"Lq_EI7l9rnA"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/Lq_EI7l9rnA/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/Lq_EI7l9rnA/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/Lq_EI7l9rnA/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/Lq_EI7l9rnA/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/Lq_EI7l9rnA/sddefault.jpg","width":640}},"title":"Zymposium - FiberRefs","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"-xo7VvKpE8w","videoPublishedAt":"2022-03-30T15:40:18.000Z"},"etag":"Y8T2DshOiqwgh7Y0xfzNRRA-_SI","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy40QTA3NTU2RkM1QzlCMzYx","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"In this 2 part series, we'll explore the mysterious relationship between Data and Functions. Are these two foundational building blocks of functional programming somehow the same thing? Let's explore, beginning with the Church Encoding, a means of—mind-bendingly—dissolving data and re-expressing it as its own interpretation.\n\n#zymposium #zio #ziomeetup #scalameetup #scala #scaladeveloper #zioscala #ziverge #functionalscala #functionalprogramming","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":32,"publishedAt":"2022-03-28T15:16:57.000Z","resourceId":{"kind":"youtube#video","videoId":"-xo7VvKpE8w"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/-xo7VvKpE8w/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/-xo7VvKpE8w/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/-xo7VvKpE8w/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/-xo7VvKpE8w/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/-xo7VvKpE8w/sddefault.jpg","width":640}},"title":"Zymposium - Data vs Function (Part 1) — Church Encodings","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"MRBTi9Kd8fM","videoPublishedAt":"2022-04-01T13:58:09.000Z"},"etag":"lYwXobU_HByeebSaI3VYKSTHOaw","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5BRjJDODk5REM0NjkzMUIy","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be learning about recursion schemes. We will see how they let us separate describing the recursion we want to do from the recursive data structure itself.\n\nWe'll also learn an accessible way to encode this and see how it is already being used in some places you may not even realize!\n\n#zymposium #zio #ziomeetup #scalameetup #scala #scaladeveloper #zioscala #ziverge #functionalscala #functionalprogramming","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":33,"publishedAt":"2022-03-30T14:14:10.000Z","resourceId":{"kind":"youtube#video","videoId":"MRBTi9Kd8fM"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/MRBTi9Kd8fM/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/MRBTi9Kd8fM/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/MRBTi9Kd8fM/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/MRBTi9Kd8fM/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/MRBTi9Kd8fM/sddefault.jpg","width":640}},"title":"Zymposium - Recursion Schemes","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"hbyVu5tgAiA","videoPublishedAt":"2022-04-08T08:13:32.000Z"},"etag":"pNMEWW7EVETm6BsYq_VQTaURxp0","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4xOTEzQzhBQzU3MDNDNjcz","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"Part 1: https://www.youtube.com/watch?v=-xo7VvKpE8w\n\nFree structures are widely used in ZIO ecosystem libraries, both as an alternative to type classes and in their own right. We've seen free structures before in our ZIO from Scratch series. In this session, we'll be learning more about free structures and how we can use them in our own programs.\n\n#zymposium #zio #ziomeetup #scalameetup #scala #scaladeveloper #zioscala #ziverge #functionalscala #functionalprogramming","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":34,"publishedAt":"2022-04-05T16:12:28.000Z","resourceId":{"kind":"youtube#video","videoId":"hbyVu5tgAiA"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/hbyVu5tgAiA/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/hbyVu5tgAiA/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/hbyVu5tgAiA/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/hbyVu5tgAiA/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/hbyVu5tgAiA/sddefault.jpg","width":640}},"title":"Zymposium — Data vs Function — Free Structures (Part 2)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"8jhLkWjsO5Y","videoPublishedAt":"2022-04-18T14:05:48.000Z"},"etag":"bJjZIHWlNcpu2nrzlyTLApwJgvk","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5GNDg1Njc1QzZERjlFRjE5","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we'll be looking at ZHub, a new concurrent data structure introduced in ZIO 2 to support extremely efficient broadcast operators. We'll be learning what it is, how to use it, and some tips and tricks for getting the most out of it. See you there!\n\n#zioworld #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":35,"publishedAt":"2022-04-05T17:01:31.000Z","resourceId":{"kind":"youtube#video","videoId":"8jhLkWjsO5Y"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/8jhLkWjsO5Y/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/8jhLkWjsO5Y/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/8jhLkWjsO5Y/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/8jhLkWjsO5Y/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/8jhLkWjsO5Y/sddefault.jpg","width":640}},"title":"Zymposium — ZHub","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"83rm2LxdkAQ","videoPublishedAt":"2022-05-05T12:07:42.000Z"},"etag":"J6Bct2XqJuyRP1e0kPU0MB4Ul1E","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4zQzFBN0RGNzNFREFCMjBE","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week, Adam and Kit explore the details of implicits. A defining feature of Scala, undergirding many of the language’s more advanced features, implicits are often regarded as magic and left only partially understood. Join us as we attempt to break down the simple rules of implicits, and drain the mystique from this oft-misunderstood mechanism.\n\n#zioworld #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":36,"publishedAt":"2022-04-05T17:38:57.000Z","resourceId":{"kind":"youtube#video","videoId":"83rm2LxdkAQ"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/83rm2LxdkAQ/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/83rm2LxdkAQ/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/83rm2LxdkAQ/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/83rm2LxdkAQ/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/83rm2LxdkAQ/sddefault.jpg","width":640}},"title":"Zymposium — Explaining Implicits (Scala 2)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"9ksAqIxV9oc","videoPublishedAt":"2022-05-13T13:26:49.000Z"},"etag":"_GWIs_8YBx_0EpYe8Trbcrx1tgg","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy45NkVENTkxRDdCQUFBMDY4","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be taking our knowledge of implicits to Scala 3. We will be learning about givens, extensions, and using along with other Scala 3 goodies. Join us to have some fun getting ready for the next version of the language!\n\n#zioworld #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming\n #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":37,"publishedAt":"2022-04-11T14:42:47.000Z","resourceId":{"kind":"youtube#video","videoId":"9ksAqIxV9oc"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/9ksAqIxV9oc/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/9ksAqIxV9oc/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/9ksAqIxV9oc/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/9ksAqIxV9oc/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/9ksAqIxV9oc/sddefault.jpg","width":640}},"title":"Zymposium — Explaining Implicits (Scala 3)","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"uv0kyCCfB1Q","videoPublishedAt":"2022-05-18T12:57:48.000Z"},"etag":"9O6ec1ZvrOUdHk_RxrQ_t6FL5Ak","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DRUQwODMxQzUyRTlGRkY3","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week Adam and Kit will be looking at concurrency problems. We'll take a common problem and look at a couple of different ways to tackle it with the tools that ZIO gives us. Come learn with us!\n\n#zioworld #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":38,"publishedAt":"2022-05-18T12:45:35.000Z","resourceId":{"kind":"youtube#video","videoId":"uv0kyCCfB1Q"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/uv0kyCCfB1Q/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/uv0kyCCfB1Q/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/uv0kyCCfB1Q/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/uv0kyCCfB1Q/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/uv0kyCCfB1Q/sddefault.jpg","width":640}},"title":"Zymposium - Concurrency Challenges","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"DEPpL9LBiyA","videoPublishedAt":"2022-05-30T16:24:58.000Z"},"etag":"Ivzhmx7VTMENb4LT478UJ1Nav_o","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy41MzY4MzcwOUFFRUU3QzEx","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This Friday, Adam, and Kit will be joined by their esteemed colleague, Daniel Vigovszky, to show off his work on the brand new invertible parsing library, zio-parser! We’ll print, we’ll parse, we’ll print what we parse, and we’ll parse what we print. How exciting!","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":39,"publishedAt":"2022-05-30T16:24:51.000Z","resourceId":{"kind":"youtube#video","videoId":"DEPpL9LBiyA"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/DEPpL9LBiyA/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/DEPpL9LBiyA/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/DEPpL9LBiyA/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/DEPpL9LBiyA/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/DEPpL9LBiyA/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Parser","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"4GWnMvbfgyE","videoPublishedAt":"2022-06-23T16:04:52.000Z"},"etag":"vLq2L9mddIgkzQM8Qnpuwl5vrRY","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4yQjZFRkExQjFGODk3RUFD","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week, Adam and Kit will build a generic Diff-ing library from scratch. We’ll then use it to support Json diffing, and possibly even extend it to derive any old custom ADT with compile-time derivation using Magnolia.\n\n#zioworld   #functionalscala #FunScala2021 #Scala #zio #Ziverge #zymposium #functionalprogramming #scaladeveloper #zioscala","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":40,"publishedAt":"2022-06-13T11:52:18.000Z","resourceId":{"kind":"youtube#video","videoId":"4GWnMvbfgyE"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/4GWnMvbfgyE/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/4GWnMvbfgyE/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/4GWnMvbfgyE/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/4GWnMvbfgyE/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/4GWnMvbfgyE/sddefault.jpg","width":640}},"title":"Zymposium - Derivable Differs","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"KExF3mplq1M","videoPublishedAt":"2022-07-04T07:49:41.000Z"},"etag":"lXA49VC0bFmQwTMJAqfx46p8z4k","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy4yQUJFNUVCMzVDNjcxRTlF","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This week we will be looking at how we can customize the ZIO runtime. We'll see how easy ZIO 2 makes it for us to add features such as logging, metrics, and monitoring with layers! \n\n#zymposium #zio #ziomeetup #scalameetup #scala #scaladeveloper #zioscala #ziverge #functionalscala #functionalprogramming #funscala #funscalaconf #scalaconf #scalafoundation #scalaworkshop #scalatraining #scalajob #scalajobs","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":41,"publishedAt":"2022-07-04T07:49:29.000Z","resourceId":{"kind":"youtube#video","videoId":"KExF3mplq1M"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/KExF3mplq1M/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/KExF3mplq1M/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/KExF3mplq1M/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/KExF3mplq1M/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/KExF3mplq1M/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Runtime Configuration","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}},{"contentDetails":{"videoId":"biAjx4zt3GU"},"etag":"oH5xId7bkMfHl_A7fQz-Govta7M","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy5DNkMwRUI2MkI4QkI4NDFG","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"This video is private.","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":43,"publishedAt":"2022-05-18T12:40:42.000Z","resourceId":{"kind":"youtube#video","videoId":"biAjx4zt3GU"},"thumbnails":{},"title":"Private video"},"status":{"privacyStatus":"private"}},{"contentDetails":{"videoId":"ZbX6Z82wMQ4","videoPublishedAt":"2022-07-06T12:58:36.000Z"},"etag":"qpUp54noQwStQtFCKvuuTRkltYQ","id":"UEx2ZEFSTWZ2b205QzhzczE4aGUxUDV2T2NvZ2F3bTV1Qy40QzRDOEU0QUYwNUIxN0M1","kind":"youtube#playlistItem","snippet":{"channelId":"UCeIg_PnAoyd1w6y8BelLdiQ","channelTitle":"Ziverge","description":"","playlistId":"PLvdARMfvom9C8ss18he1P5vOcogawm5uC","position":42,"publishedAt":"2022-07-06T12:58:14.000Z","resourceId":{"kind":"youtube#video","videoId":"ZbX6Z82wMQ4"},"thumbnails":{"default":{"height":90,"url":"https://i.ytimg.com/vi/ZbX6Z82wMQ4/default.jpg","width":120},"high":{"height":360,"url":"https://i.ytimg.com/vi/ZbX6Z82wMQ4/hqdefault.jpg","width":480},"maxres":{"height":720,"url":"https://i.ytimg.com/vi/ZbX6Z82wMQ4/maxresdefault.jpg","width":1280},"medium":{"height":180,"url":"https://i.ytimg.com/vi/ZbX6Z82wMQ4/mqdefault.jpg","width":320},"standard":{"height":480,"url":"https://i.ytimg.com/vi/ZbX6Z82wMQ4/sddefault.jpg","width":640}},"title":"Zymposium - ZIO Schedule","videoOwnerChannelId":"UCeIg_PnAoyd1w6y8BelLdiQ","videoOwnerChannelTitle":"Ziverge"},"status":{"privacyStatus":"public"}}],"kind":"youtube#playlistItemListResponse","nextPageToken":"EAAaBlBUOkNDdw","pageInfo":{"resultsPerPage":44,"totalResults":45}}
      """

  sealed trait JsonType extends Product with Serializable { self =>
    import JsonType._

    def unify(that: JsonType): JsonType =
      (self, that) match {
        case (lhs, rhs) if lhs == rhs                 => lhs
        case (JLong, JInt)                            => JLong
        case (JInt, JLong)                            => JLong
        case (JDouble, JInt | JLong)                  => JDouble
        case (JInt | JLong, JDouble)                  => JDouble
        case (JBigDecimal, JDouble | JInt | JLong)    => JBigDecimal
        case (JDouble | JInt | JLong, JBigDecimal)    => JBigDecimal
        case (JObject(lhsFields), JObject(rhsFields)) => JObject(mergeFields(lhsFields, rhsFields))

        case (JOption(left), JNull)  => JOption(left)
        case (JNull, JOption(right)) => JOption(right)

        case (JOption(left), JOption(right)) => JOption(left unify right)

        case (left, JOption(right)) => JOption(left unify right)
        case (JOption(left), right) => JOption(left unify right)

        case (JNull, right) => JOption(right)
        case (left, JNull)  => JOption(left)

        case (JArray(left), JArray(right)) => JArray(left unify right)
        case (CaseClass(left, leftFields), CaseClass(right, rightFields)) if left == right =>
          CaseClass(left, (leftFields unify rightFields).asInstanceOf[JObject])
        case (left, right) =>
          throw new Exception(s"""
                                 |Cannot combine:
                                 | LEFT: ${left.toString}
                                 |RIGHT: ${right.toString}
                                 |""".stripMargin)
      }

    def typeName: String = self match {
      case CaseClass(name, _)   => name
      case JObject(_)           => "RootObject"
      case JString              => "String"
      case JInt                 => "Int"
      case JLong                => "Long"
      case JDouble              => "Double"
      case JBigDecimal          => "BigDecimal"
      case JNull                => "null"
      case JBoolean             => "Boolean"
      case JOption(value)       => s"Option[${value.typeName}]"
      case JArray(value)        => s"List[${value.typeName}]"
      case Alternatives(values) => s"Alternatives[${values.map(_.typeName).mkString(", ")}]"
    }

    def makeOptional(jsonType: JsonType): JsonType = jsonType match {
      case JNull          => JNull
      case JOption(value) => JOption(value)
      case other          => JOption(other)
    }

    def mergeFields(
      lhs: Map[String, JsonType],
      rhs: Map[String, JsonType]
    ): Map[String, JsonType] = {
      val result = lhs.foldLeft(rhs) { case (acc, (name, lhsValue)) =>
//        if (name == "thumbnails") {
//          println(s"lhs: ${lhsValue.toString} rhs: ${rhs.get(name)}")
//        }
        acc.get(name) match {
          case Some(rhsValue) => acc + (name -> lhsValue.unify(rhsValue))
          case None           => acc + (name -> makeOptional(lhsValue))
        }
      }

      println((rhs.keySet -- result.keySet) ++ (result.keySet -- rhs.keySet))

      (rhs.keySet -- lhs.keySet).foldLeft(result) { case (acc, name) =>
        acc + (name -> makeOptional(rhs(name)))
      }
    }

  }

  object JsonType {
    final case class CaseClass(name: String, fields: JObject) extends JsonType
    final case class JObject(fields: Map[String, JsonType])   extends JsonType
    case object JString                                       extends JsonType
    case object JInt                                          extends JsonType
    case object JLong                                         extends JsonType
    case object JDouble                                       extends JsonType
    case object JBigDecimal                                   extends JsonType
    case object JNull                                         extends JsonType
    case object JBoolean                                      extends JsonType
    final case class JOption(value: JsonType)                 extends JsonType
    final case class JArray(value: JsonType)                  extends JsonType
    final case class Alternatives(values: Chunk[JsonType])    extends JsonType

    def render(jsonType: JsonType): String = {
      val caseClasses = flattenCaseClasses(jsonType).distinct
      caseClasses.map(renderCaseClass).mkString("\n\n")
    }

    def flattenCaseClasses(jsonType: JsonType): List[CaseClass] =
      jsonType match {
        case CaseClass(name, fields) =>
          CaseClass(name, fields) :: fields.fields.toList.flatMap(t => flattenCaseClasses(t._2))
        case JObject(fields) =>
          fields.values.flatMap(flattenCaseClasses).toList
        case JArray(values) =>
          flattenCaseClasses(values)
        case JOption(value) =>
          flattenCaseClasses(value)
        case _ =>
          Nil
      }

    def renderCaseClass(clazz: CaseClass): String = {
      val fields = clazz.fields.fields.map { case (name, value) =>
        s"  $name: ${value.typeName}"
      }.mkString(", \n")

      s"""
final case class ${clazz.name}(
$fields
)

object ${clazz.name} {
  implicit val codec: JsonCodec[${clazz.name}] = DeriveJsonCodec.gen
}
         """.trim
    }

    def unifyTypes(json: Json, key: Option[String] = None): JsonType =
      json match {
        case Json.Null => JNull
        case Json.Arr(elements) =>
          JArray(elements.map(unifyTypes(_, key)).reduce(_ unify _))
        case Json.Bool(_) => JBoolean
        case Json.Str(_)  => JString
        case Json.Num(bigDecimal) =>
          if (bigDecimal.isValidInt) JInt
          else if (bigDecimal.isValidLong) JLong
          else if (bigDecimal <= Double.MaxValue) JDouble
          else JBigDecimal
        case Json.Obj(fields) =>
          val result = JObject(fields.toMap.map { case (name, value) =>
            name -> unifyTypes(value, Some(name))
          })
          key match {
            case Some(key) => CaseClass(pascalFormat(key), result)
            case None      => CaseClass("PayloadRoot", result)
          }
      }

  }

  def caseClassify(input: String): Unit = {
    val json = example.fromJson[ast.Json].toOption.get
    println(render(unifyTypes(json)))
  }

//  def main(args: Array[String]): Unit =
//    println(caseClassify(example))

}
